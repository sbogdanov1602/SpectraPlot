SpectraPlot позволяет, не перестраивая его, подключить дополнительные библиотеки для чтения данных спектров из файлов.
На данный момент реализованы и подключены две таких библиотеки: чтение из .smp файлов (SmpLoader.dll) и чтение из .cch файлов (CchLoader.dll).

Для подключения к SpectraPlot внешняя библиотека должна удовлетворять нескольким, не слишком сложным требованиям.
1. Библиотека должна быть динамической (.dll) и написана на С++.

2. В ней должен быть разработан класс реализующий абстрактный класс IPlotData, находящийся в библиотеке CommonLib.dll (см. файлы CommonLib\CommonLib.h и CommonLib.cpp)

3. В библиотеке должна быть реализована экспортируемая функция, формально возвращающая указатель на IPlotData, а реально возвращающая указатель на объект класса, реализующего IPlotData.
Например, эта функци может выглядеть так:

extern "C" __declspec(dllexport) IPlotData* GetIPlotData(void)
{
    return &SmpDataInstance;
}

, где SmpDataInstance - объект (экземпляр) класса, реализующего IPlotData (например, class SmpData : public IPlotData{...}) 
Слова extern "C"  обязательны, это связано со способом вызова этой функции внутри SpectraPlot.
Ну а  __declspec(dllexport) говорит, что функция экспортируется из библиотеки.
Имя функции может быть любым. А вот сигнатура функции строго обязательна.

4. После сборки и отладки библиотеки, ее файл подкладывается в каталог, где лежит SpectraPlot.exe (см. файлы CchLoader.dll и SmpLoader.dll в этом каталоге).

5. Для того, чтоб SpectraPlot.exe загрузил бы новую библиотеку, ее надо прописать в лежащем в том же каталоге файле Libraries.json.
В этом файле уже прописаны вышеупомянутые библиотеки. Ниже приводится содержимое этого файла на текущий момент:

[
{
	"id": 1,
	"ext": "smp",
	"libName": "SmpLoader.dll",
	"funcName": "GetIPlotData",
	"loadOneFileOnly": false
},
{
	"id": 2,
	"ext": "cch",
	"libName": "CchLoader.dll",
	"funcName": "GetIPlotData",
	"loadOneFileOnly": true
}
]

, где 

	id - служебная переменная,
	ext - задает расширение файла.файлов, которые будет читать библиотека,
	libName - имя файла библиотеки,
	funcName - имя функции библиотеки, которая будет возвращать указатель на IPlotData (не обязана называться GetIPlotData)
	loadOneFileOnly - булевская переменная, которая определяет, что должна делать читалка спектров (см. jgbcfybt метода CCommonLib::Load(...) в CCommonLib\CCommonLib.h),
	если в каталоге, из которого читаются спектры, больше одного файла с заданным в ext расширением.
	
Рекомендую всюду в именах соблюдать регистр.
  
Примеры классов, реализующих IPlotData можно посмотреть в файлах Smploader\SmpData.* и CchLoader\CchData.*
В исходниках этих же библиотек можно увидеть примеры реализации экспортируемой функции, возвращающей IPlotData*.  